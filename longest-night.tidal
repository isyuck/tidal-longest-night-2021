setcps(150/60/4)

hush

once $ r "bd" # n 0

d1 $ whenmod 4 2 (density 0) $ r "<[ch(5,8) ~] [cp*4]>" # n 0

d1 $ r "<bd*16 bd*2>" # n 0

d1 $ r "bd" # n 0

---------------------------------------------------------------------------------------

do
  let cycbp = binaryN 16 2348
  rpat 0
  d1
    $ degrade
    $ mute "[cy, cb]"
    $ stack [
    whenmod 8 4 ((|+ n "-24") . slow 2)
    $ stack [
    struct (binaryN 32 $ segment 1 $ irand 200) $ r "ch" # n 0
    ,
    r "~ [oh*2]" # n 0
    ,
    slow 4 $ stack [
    struct cycbp $ r "cy"
    ,
    struct (inv cycbp) $ r "cb"
          ] # n 0
    ]
    ]

---------------------------------------------------------------------------------------

do
  let cycbp = binaryN 16 2348
  rpat 0
  d1
    -- $ solo "sd"
    -- $ struct "t*64"
    $ sometimes (ply 2)
    $ degradeBy (segment 16 $ slow 8 $ range 0 0.9 $ sine)
    $ stack [
    whenmod 4 2 (density 0)
    $ whenmod 8 4 ((|+ n "-24") . slow 2)
    $ stack [
    struct (binaryN 32 $ segment 1 $ irand 200) $ r "ch" # n 0
    ,
    r "~ oh" # n 0
    ,
    stack [
    struct (cycbp) $ r "cy"
    ,
    struct (inv $ cycbp) $ r "cb"
          ] # n 0
    ]
    ,
    compress (0.5, 1) . slow 2
    $ stack [
        struct (inv $ binaryN 16 (slow 4 $ segment 4 $ irand 2139))
        $ r "rs" # n 0
        ,
        struct (binaryN 16 (slow 4 $ segment 4 $ irand 2139))
        $ r "cp" # n 0
          ]
    ,
    whenmod 5 3 (density "<2 0>")
    $ r "bd" # n 0
    ]

---------------------------------------------------------------------------------------

do
  let cycbp = binaryN 16 2348
  rpat 0
  d1
    -- $ solo "sd"
    -- $ struct "t(5,8)"
    -- $ sometimes (ply 2)
    -- $ degradeBy (segment 16 $ slow 8 $ sine)
    -- $ struct "<t*16>" . slow 4
    -- $ solo "[bt,bd]"
    -- $ struct "<t*16 t*4>" . slow 8
    $ stack [
    (|- n (segment 4 $ irand 24))
    $ stack [
            struct (inv $ binaryN 16 (slow 4 $ segment 4 $ irand 2139))
            $ r "ch" # n 0
            ,
            struct (binaryN 16 (slow 4 $ segment 4 $ irand 2139))
            $ r "oh" # n 0
        ]
    ,
    whenmod 8 4 (density 0)
    $ every 3 ((|+ n 12) . fast 2)
    $ slow 2 $ stack [
    r "bd . ~" # n 0
    ,
    r "[~ bt] bt(5,8)" # n 0
          ]
    ]

---------------------------------------------------------------------------------------

do
  rpat 1
  d1
    $ slow 16
    $ stack [
    whenmod 15 9 (density 0)
    $ stack [
    slow "<1 2>/4"
    $ off "e" (# r "cp")
    $ r "rs(5,8)" # n "0 [4 2]"
          ]
    ,
    whenmod 5 3 (density 0)
    $ degradeBy 0.1
    $ (|+ n (segment 2 $ range (-4) 4 $ slow 4 $ sine))
    $ stack [
        r "ch*16" # n 0
        ,
        r "oh(3,8,2)" # n 0
          ]
    ,
    whenmod 12 7 (density 0)
    $ r "bd*<8 0>" # n "0 4"
    ,
    r "mt(<0 4>,16)" # n 0
             ]

---------------------------------------------------------------------------------------

do
  rpat 1
  d1
    $ struct (binaryN 32 8273)
    $ stack [
    stack [
    whenmod 8 5 (slow 8)
    $ every 2 (off "e" (# r "cp"))
    $ r "rs*<4 2>/2" # n "0 [4 2]"
    ,
    degrade $ stack [
    r "cy*16" # n (irand 12)
    ,
    every 3 (density 0) $ r "cb*8" # n 0
          ]
    ,
    r "sd*4" # n 0
    ,
    r "bd/2" # n 0
    ]
    ]

---------------------------------------------------------------------------------------

do
  rpat 1
  d1 $ degradeBy 0.3
    $ stack [
    whenmod 5 3 (off "e" (# r "cp"))
    $ ply 2
    $ slow 2
    $ euclid "<3 5>" 8
    $ n "{a c g c f e}%1"
    # r "rs"
    ,
    whenmod 5 3 (density 0)
    $ r "bd*<4 2>" # n 0
    ,
    whenmod 5 3 (density 0)
    $ degradeBy 0.1
    $ (|+ n (segment 2 $ range (-4) 4 $ slow 4 $ sine))
    $ stack [
        r "ch*16" # n 0
        ,
        r "oh(3,8,2)" # n 0
          ]
    ,
    r "cy/5" # n 0
    ,
    r "~ bt" # n 0
             ]

---------------------------------------------------------------------------------------

do
  rpat 2
  let hh = binaryN 32 (segment 1 $ irand 8232)
  d1
    -- $ whenmod 16 12 (density 0)
    $ slow 2
    $ stack [
    degradeBy (segment 16 $ slow 8 $ range 0 1 sine)
    -- $ mute "[bt]"
    $ mute "cb"
    $ slow 2
    $ whenmod 8 4 (iter 4)
    $ stack [
    r "mt*<32 16 64>" # n "<0 [4 2]>"
    ,
    r "bt" # n 0
    ,
    ("e" ~>) $ r "lt*<8 4>" # n 0
    ,
    r "ht*8" # n "<[0 8] 4>"
    ,
    r "cp(<3 5 0>,8)" # n 0
    ,
    off "q" (# r "cy")
    $ r "cb*4" # n "2 4 2 0"
    ,
    r "bd*<0 2 4 8>" # n 0
             ]
    ,
    every 2 (density 0)
    $ slow 2 $ stack [
    struct (inv $ hh) $ r "ch" # n 0
    ,
    struct hh $ r "oh" # n 0
          ]
            ]

---------------------------------------------------------------------------------------

do
  rpat 2
  d1
    $ whenmod 16 8 (iter 8 . struct "t*<8 4>" . slow 2)
    $ stack [
    r "bt" # n 0
    ,
    ("e" ~>) $ r "lt*<8 4>" # n 0
    ,
    r "ht*8" # n "<[0 8] 4>"
    ,
    off "e" (# r "ch")
    $ slow 2 $ r "oh*<4 8 2 16>" # n "{0 4 2}%8"
    ,
    r "cb*2" # n "<a c>"
    ,
    r "bd(<0 0 3 5>,8)" # n 0
    ,
    r "mt*2" # n 0
             ]

---------------------------------------------------------------------------------------

do
  rpat 3
  let p = binaryN 32 (segment 1 $ slow 4 $ irand 8232)
  d1
    $ stack [
    slow 1
    $ whenmod 4 2 (degradeBy 0.9)
    $ stack [
    struct p $ r "cp" # n 0
    ,
    struct (inv p) $ r "rs" # n 0
          ]
    ,
    superimpose (# r "bd")
    $ r "sd/8" # n 0
    ,
    slow 2 $ (2 ~>) $ whenmod 4 2 (density 0) $ n "0*16" # r (choose ["ch", "oh"])
          ]

hush
